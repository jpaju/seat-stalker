name: CI

on:
  push:

env:
  # define Java options for both official sbt and sbt-extras
  JAVA_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
  JVM_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8

jobs:
  scala-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Check code formatting
        run: nix develop --command sbt scalafmtCheckAll scalafmtSbtCheck

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Build and run unit tests
        run: nix develop --command sbt test

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Build and run integration tests
        run: nix develop --command sbt integration/test

  terraform-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Terraform Format Check
        run: nix develop .#infrastructure --command terraform fmt -check -recursive
        working-directory: ./infrastructure

      - name: Terraform Init
        run: nix develop .#infrastructure --command terraform init -backend=false -input=false
        working-directory: ./infrastructure

      - name: Terraform Validate
        run: nix develop .#infrastructure --command terraform validate
        working-directory: ./infrastructure

      - name: Terraform Security Scan
        run: nix develop .#infrastructure --command tfsec .
        working-directory: ./infrastructure

  terraform-plan:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: [scala-lint, unit-test, integration-test, terraform-lint]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: nix develop .#infrastructure --command terraform init -input=false
        working-directory: ./infrastructure

      - name: Terraform Plan
        run: nix develop .#infrastructure --command terraform plan -out=tfplan -input=false
        working-directory: ./infrastructure
        env:
          TF_VAR_telegram_chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          TF_VAR_telegram_bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TF_VAR_telegram_secret_token: ${{ secrets.TELEGRAM_SECRET_TOKEN }}
          TF_VAR_email_alert_recipient: ${{ secrets.EMAIL_ALERT_RECIPIENT }}

      - name: Post Terraform Plan Comment
        uses: borchero/terraform-plan-comment@v2
        with:
          token: ${{ github.token }}
          planfile: tfplan
          terraform-cmd: nix develop .#infrastructure --command terraform
          working-directory: ./infrastructure

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: infrastructure/tfplan
          retention-days: 7

  terraform-apply:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [terraform-plan]
    environment: Production
    concurrency:
      group: terraform-apply
      cancel-in-progress: false
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: infrastructure/

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: nix develop .#infrastructure --command terraform init -input=false
        working-directory: ./infrastructure

      - name: Terraform Apply
        run: nix develop .#infrastructure --command terraform apply -input=false tfplan
        working-directory: ./infrastructure

  build-and-deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [terraform-apply]
    concurrency:
      group: application-deployment
      cancel-in-progress: false
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Build JAR
        run: nix develop --command sbt -v assembly

      - name: Deploy to Azure
        uses: Azure/functions-action@v1
        with:
          app-name: func-seat-stalker
          package: "./azure-functions"
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
